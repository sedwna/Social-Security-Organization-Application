# Generated by Django 5.1.6 on 2025-03-03 22:49

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=11, null=True)),
                ('national_code', models.CharField(blank=True, max_length=11, null=True)),
                ('province', models.CharField(choices=[('021', 'تهران'), ('061', 'خوزستان'), ('077', 'بوشهر'), ('031', 'اصفهان'), ('051', 'خراسان رضوی'), ('071', 'فارس'), ('041', 'آذربایجان شرقی'), ('011', 'مازندران'), ('034', 'کرمان'), ('026', 'البرز'), ('013', 'گیلان'), ('074', 'کهگیلویه و بویراحمد'), ('044', 'آذربایجان غربی'), ('076', 'هرمزگان'), ('086', 'مرکزی'), ('035', 'یزد'), ('000', 'فرامنطقه\u200cای'), ('083', 'کرمانشاه'), ('028', 'قزوین'), ('054', 'سیستان و بلوچستان'), ('081', 'همدان'), ('084', 'ایلام'), ('017', 'گلستان'), ('066', 'لرستان'), ('024', 'زنجان'), ('045', 'اردبیل'), ('025', 'قم'), ('087', 'کردستان'), ('023', 'سمنان'), ('038', 'چهارمحال و بختیاری'), ('058', 'خراسان شمالی'), ('056', 'خراسان جنوبی')], max_length=3)),
                ('gender', models.CharField(choices=[('M', 'آقا'), ('F', 'خانم')], max_length=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
